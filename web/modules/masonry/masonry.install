<?php
/**
 * @file
 * Install, update and uninstall functions for the Masonry API module.
 *
 * Sponsored by: www.freelance-drupal.com
 */

/**
 * Implements hook_requirements().
 */

use Drupal\Core\Cache\Cache;

function masonry_requirements($phase) {
  $requirements = [];
  $masonry = NULL;
  $imagesLoaded = NULL;

  if ($phase == 'runtime') {

    // Is the library found in the root libraries path.
    $path = DRUPAL_ROOT . '/libraries/masonry/masonry.pkgd.min.js';
    if (\Drupal::moduleHandler()->moduleExists('libraries')) {
      $path = libraries_get_path('masonry') . '/masonry.pkgd.min.js';
      $masonry = libraries_detect('masonry');
    }
    $library_found = file_exists($path);

    // Check for Masonry Library.
    $requirements['masonry'] = [
      'title' => t('jQuery Masonry'),
    ];

    if ($library_found) {
      $requirements['masonry']['value'] = $masonry ? $masonry['version'] : t('The library is properly installed.');
      $requirements['masonry']['severity'] = REQUIREMENT_OK;
    }
    else {
      if ($masonry) {
        $requirements['masonry']['value'] = $masonry ? $masonry['error'] : t('Masonry not found');
        $requirements['masonry']['description'] = $masonry ? $masonry['error message'] : t('The library is missing. Please check that %file exists', ['%file' => '/libraries/masonry/masonry.pkgd.min.js']);
      }
      $requirements['masonry']['severity'] = REQUIREMENT_ERROR;
    }

    // Is the library found in the root libraries path.
    $path = DRUPAL_ROOT . '/libraries/imagesloaded/imagesloaded.pkgd.min.js';
    if (\Drupal::moduleHandler()->moduleExists('libraries')) {
      $path = libraries_get_path('imagesloaded') . '/imagesloaded.pkgd.min.js';
      $imagesLoaded = libraries_detect('imagesloaded');
    }
    $library_found = file_exists($path);

    $requirements['masonry_imagesloaded'] = [
      'title' => t('jQuery Images Loaded'),
    ];

    if ($library_found) {
      $requirements['masonry_imagesloaded']['value'] = $imagesLoaded ? $imagesLoaded['version'] : t('The library is properly installed.');
      $requirements['masonry_imagesloaded']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['masonry_imagesloaded']['value'] = $imagesLoaded ? $imagesLoaded['error'] : t('ImagesLoaded not found');
      $requirements['masonry_imagesloaded']['description'] = $imagesLoaded ? $imagesLoaded['error message'] : t('The library is missing. Please check that %file exists', ['%file' => '/libraries/masonry/masonry.pkgd.min.js']);
      $requirements['masonry_imagesloaded']['severity'] = REQUIREMENT_ERROR;
    }
  }

  return $requirements;
}

function masonry_update_8001(&$sandbox) {
  Cache::invalidateTags(['rendered']);
}
